<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.1; //idle speed

// if game object doesn't exist, create it
if (!instance_exists(obj_game))
{
    instance_create(x,y,obj_game);
}

// set default speed
sp = 1;

// search for the player
alarm[0] = room_speed*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_player)) 
{
newdir = point_direction(x,y,obj_player.x,obj_player.y) + irandom_range(-20,20); 
speed=sp;
direction=newdir;
alarm[0]= irandom_range(15,45);
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// make sure the objects are always in the correct order
depth = -y;

// if player dies stop moving
if (!instance_exists(obj_player))
{
    // spawn fake enemies with (laugh animation)
    instance_create(x,y,obj_enemy_fake);
    instance_destroy();
}

if(hspeed = abs(hspeed))
{
   //instance is moving right
   sprite_index = spr_enemy_walk_right;
}
else
{
  //instance is moving left
  sprite_index = spr_enemy_walk_left;
}

// search and destroy

/*switch (keyboard_key)
    {
    case vk_left:
    case ord("A"):
      sprite_index = spr_enemy_walk_left;
      //image_xscale = -1;
      x -= sp;
      break;
    case vk_right:
    case ord("D"):
      sprite_index = spr_enemy_walk_right;
      //image_xscale = 1;
      x += sp;
      break;
    case vk_up:
    case ord("W"):
      sprite_index = spr_enemy_walk_right;
      y -= sp;
      break;
    case vk_down:
    case ord("S"):
      sprite_index = spr_enemy_walk_right;
      y += sp;
      break;
    default:
      sprite_index = spr_enemy_idle;
      break;
    }*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// make the enemy fly back

// remove a heart


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_cursor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// if player clicks fire
if (mouse_check_button(mb_left))
{
    instance_destroy();
    global.s ++;
    audio_play_sound(snd_point, 100, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
